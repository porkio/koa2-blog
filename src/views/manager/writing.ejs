<!DOCTYPE html>
<html lang="zh">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="../stylesheets/manager.css">
  <link rel="stylesheet" href="../stylesheets/iconfont.css">
  <title><%= pageInfo.title %></title>
</head>

<body>
  <section class="wrapper">
    <div class="container">
      <div id="writing" class="m-item">
        <h2 class="m-title" title="<%= pageInfo.title %>"><%= pageInfo.title %></h2>
        <div class="form-writing">
          <div class="form-group">
            <label for="title">文章标题</label>
            <input type="text" name="title" id="title" value="<%= article.title ? article.title : '' %>" autocomplete=""
              required>
            <i class="iconfont icon-fail" aria-hidden="true"></i>
          </div>
          <div class="dis-flex justify-space-between">
            <div class="form-group col-6">
              <label for="linkUrl">固定链接</label>
              <input type="text" name="linkUrl" id="linkURL" value="<%= article.linkUrl ? article.linkUrl : '' %>"
                autocomplete="" required>
              <span class="input-btn"><i class="iconfont icon-shuaxin"></i></span>
            </div>
            <div class="form-group col-3">
              <label for="order">排序</label>
              <input type="number" name="order" id="order" value="<%= article.order ? article.order : 100 %>"
                autocomplete="" required>
            </div>
            <div class="form-group col-3">
              <label for="categoryId">文章分类</label>
              <select class="select-primary" name="categoryId" id="categoryId">
                <% for (let category of catesList) { %>
                <% if (!category.parentId) { %>
                <option value="<%= category.id %>" disabled><%= category.cateName %></option>
                <% } else { %>
                <% if (article.categoryId == category.id) {%>
                <option value="<%= category.id %>" selected>&nbsp;&nbsp; <%= category.cateName %></option>
                <% } else { %>
                <option value="<%= category.id %>">&nbsp;&nbsp; <%= category.cateName %></option>
                <% } %>
                <% } %>
                <% } %>
              </select>
            </div>
          </div>

          <div class="form-group">
            <label for="content">正文</label>
            <textarea id="content" name="name" rows="28"
              cols="100"><%= article.content ? article.content : '' %></textarea>
          </div>

          <div class="form-group">
            <label for="cloudTag">云标签<i class="iconfont icon-Addnewcompose" id="btnAddCloudTag"></i></label>
            <div class="dis-flex clodu-tag-group flex-wrap">
              <% for (let tag of tagList) { %>
              <% if (article.tags) { %>
              <% if (article.tagIds.indexOf(tag.id) > -1) { %>
              <span class="btn btn-tag" selected="true" id="cloudTag" data-id="<%= tag.id %>"><%= tag.tagName %></span>
              <% } else { %>
              <span class="btn btn-tag" id="cloudTag" data-id="<%= tag.id %>"><%= tag.tagName %></span>
              <% } %>
              <% } else { %>
              <span class="btn btn-tag" id="cloudTag" data-id="<%= tag.id %>"><%= tag.tagName %></span>
              <% } %>
              <% } %>
            </div>
          </div>

          <div class="dis-flex">
            <div class="form-group col-4">
              <label for="views">浏览次数</label>
              <input type="number" name="views" id="views" value="<%= article.views ? article.views : 0 %>"
                autocomplete="">
            </div>
            <div class="form-group col-4">
              <label for="likes">获赞次数</label>
              <input type="number" name="likes" id="likes" value="<%= article.likes ? article.likes : 0 %>"
                autocomplete="">
            </div>
          </div>

          <div class="form-group col-4">
            <label for="likes">文章缩略图</label>
            <div class="form-image">
              <img src="<%= article.showImgUrl ? article.showImgUrl : '../images/default-article-img.jpg' %>"
                id="showImgUrl" alt="">
              <span class="btn btn-outline-primary btn-small" id="btnChangeImg">更换</span>
              <input type="file" name="articleImg" id="articleImg" style="display: none;">
            </div>
          </div>

          <div class="form-group">
            <% if (article.id) { %>
            <input type="button" id="btn-update" value="保存">
            <% } else { %>
            <input type="button" id="btn-submit" value="发布">
            <% } %>
          </div>
        </div>
      </div>
    </div>

    <div class="layer-default">
      <div class="layer-item" id="layerItem" style="display: none;">
        <h4 class="title title-success">添加云标签</h4>
        <span class="btn-close">&times;</span>
        <div class="form-group">
          <label for="tagName">标签名称</label>
          <input type="text" name="tagName" id="tagName" value="" placeholder="">
        </div>
        <div class="form-group">
          <label for="tagOrder">排序</label>
          <input type="number" name="tagOrder" id="tagOrder" value="100" placeholder="">
        </div>
        <div class="form-group">
          <button class="btn btn-success" id="cardBtnSave">确定</button>
          <button class="btn btn-danger" id="cardBtnCancel">取消</button>
        </div>
      </div>
    </div>


  </section>

  <script src="../scripts/manager.js"></script>
  <script type="module">
    import {
      utils
    } from '../scripts/utils.js'

    document.addEventListener('readystatechange', e => {
      if (document.readyState === 'complete') {
        // 页面就绪

        // 浮动层元素
        const layerDefault = document.querySelector('.layer-default')
        const layerItem = document.querySelector('#layerItem')
        const cardBtnSave = document.querySelector('#cardBtnSave')
        const cardBtnCancel = document.querySelector('#cardBtnCancel')

        // 表单控件
        const linkUrlInput = document.querySelector('#linkURL')
        const btnRefreshLinkString = document.querySelector('.icon-shuaxin')
        const titleInput = document.querySelector('#title')
        const orderInput = document.querySelector('#order')
        const categoryIdSelector = document.querySelector('#categoryId')
        const contentTextarea = document.querySelector('#content')
        const cloudTags = document.querySelectorAll('#cloudTag')
        const btnAddCloudTag = document.querySelector('#btnAddCloudTag')
        const viewsInput = document.querySelector('#views')
        const likesInput = document.querySelector('#likes')
        const btnChangeImg = document.querySelector('#btnChangeImg')
        const imgInput = document.querySelector('#articleImg')
        const showImg = document.querySelector('#showImgUrl')
        const btnSubmit = document.querySelector('#btn-submit')
        const btnUpdate = document.querySelector('#btn-update')

        layerDefault && layerDefault.remove()

        const formData = {
          tagIds: []
        }

        titleInput.addEventListener('input', e => {
          if (titleInput.parentElement.classList.contains('data-error')) {
            titleInput.parentElement.classList.remove('data-error')
          }
        }, false)

        // 自动随机生成短链接
        if (linkUrlInput && (!linkUrlInput.value)) {
          linkUrlInput.value = utils.randomStrGenerator(8)
        }

        // 重新随机生成短链接按钮点击监听
        btnRefreshLinkString.addEventListener('click', e => {
          linkUrlInput.value = utils.randomStrGenerator(8)
        }, false)

        // 分类选择监听
        categoryIdSelector.addEventListener('change', e => {
          Object.assign(formData, {
            categoryId: categoryIdSelector.value
          })
          console.log(formData)
        }, false)

        // 添加云标签
        btnAddCloudTag.addEventListener('click', e => {
          layerDefault && document.body.appendChild(layerDefault)
          layerItem.style.display = 'block'
          document.querySelector('#tagName').focus()
        }, false)

        // 云标签点击监听
        cloudTags.forEach(tag => {
          const tagId = tag.getAttribute('data-id')
          if (tag.getAttribute('selected')) {
            if (!(tagId in formData.tagIds)) {
              formData.tagIds.push(tagId)
              console.log(formData)
            }
            const bgColor = utils.getRandomDeepColor()
            tag.style.backgroundColor = bgColor
            tag.style.color = '#ffffff'
            tag.style.border = '1px solid ' + bgColor
          } else {
            if (tagId in formData.tagIds) {
              formData.tagIds.remove(tagId)
            }
            tag.style.background = 'none'
            tag.style.color = '#888888'
            tag.style.border = '1px solid #888888'
          }
          tag.addEventListener('click', cloudTagEvent, false)
        })

        // 注册云标签被点击事件（函数）
        function cloudTagEvent(e) {
          const tagElem = e.target
          const tagId = tagElem.getAttribute('data-id')
          if (formData.tagIds.indexOf(tagId) < 0) {
            formData.tagIds.push(tagId)

            // 添加标签激活样式
            const bgColor = utils.getRandomDeepColor()
            tagElem.style.backgroundColor = bgColor
            tagElem.style.color = '#ffffff'
            tagElem.style.border = '1px solid ' + bgColor
            tagElem.setAttribute('selected', 'true')
          } else {
            // 从标签id列表中移除选中标签的id
            formData.tagIds.splice(formData.tagIds.indexOf(tagId), 1)
            tagElem.style.background = 'none'
            tagElem.style.color = '#888888'
            tagElem.style.border = '1px solid #888888'
            tagElem.setAttribute('selected', 'false')
            console.log(formData)
          }
        }


        // 更换文章缩略图
        btnChangeImg.addEventListener('click', e => {
          imgInput.click()
        }, false)

        // 监听是否选择了文件/图片
        imgInput.addEventListener('change', e => {
          const file = imgInput.files[0]
          const fd = new FormData()
          const oldImg = showImg.src.split('uploads/')[1]
          console.log(oldImg)
          fd.append('article_img', file)
          fd.append('old_img', oldImg)

          utils.ajax('/api/manager/uploadArticleImg', {
            method: 'POST',
            body: fd
          }).then(res => {
            if (res.errno === 0) {
              showImg.src = res.data.filePath
              utils.showMessage({
                title: '文章缩略图更换成功',
                icon: 'success'
              })
            } else {
              utils.showMessage({
                title: res.message,
                icon: 'failed'
              })
            }
          })
        }, false)

        // 数据格式化/校验
        function formatData() {
          const title = titleInput.value
          const linkUrl = linkUrlInput.value
          const order = Number(orderInput.value) || 100
          const categoryId = Number(categoryIdSelector.value)
          const content = contentTextarea.value
          const views = Number(viewsInput.value)
          const likes = Number(likesInput.value)
          const showImgUrl = showImg.src

          Object.assign(formData, {
              title,
              linkUrl,
              order,
              categoryId,
              content,
              views,
              likes,
              showImgUrl
            })

            !(() => {
              // 数据校验
              if (!formData.title) {
                // 如果标题为空
                titleInput.focus()
                titleInput.parentElement.classList.add('data-error')
              }
              if (!formData.linkUrl) {
                const linkString = utils.randomStrGenerator(8)
                formData.linkUrl = linkString
                linkUrlInput.value = linkString
              }
            })()
        }

        // 发布文章
        btnSubmit && btnSubmit.addEventListener('click', e => {
          formatData()

          utils.ajax('/api/manager/publish', {
            method: 'POST',
            body: formData
          }).then(res => {
            if (res.errno === 0) {
              utils.showMessage({
                title: res.message,
                icon: 'success',
                cb() {
                  location.href = 'articles'
                }
              })
            } else {
              utils.showMessage({
                title: res.message,
                icon: 'failed'
              })
            }
          })

        }, false)

        // 浮动层取消按钮点击事件
        cardBtnCancel.addEventListener('click', e => {
          if (layerDefault) {
            layerDefault.remove()
          } else {
            layerItem.remove()
          }
        }, false)

        // 浮动层确定按钮点击事件
        cardBtnSave.addEventListener('click', e => {
          const tagName = document.querySelector('#tagName').value
          const order = document.querySelector('#tagOrder').value
          const categoryId = Number(categoryIdSelector.value)
          if (!tagName || !order) {
            utils.showMessage({
              title: '标签名和排序均不可为空',
              icon: 'failed'
            })
            return
          }
          utils.ajax('/api/manager/addTag', {
            method: 'POST',
            body: {
              tagName,
              order,
              categoryId
            }
          }).then(res => {
            if (res.errno === 0) {
              utils.showMessage({
                title: res.message,
                icon: 'success'
              })
              layerDefault && layerDefault.remove()
              const cloudTagGroup = document.querySelector('.clodu-tag-group')
              const newCloudTag = document.createElement('span')
              newCloudTag.className = 'btn btn-tag'
              newCloudTag.id = 'cloudTag'
              newCloudTag.setAttribute('data-id', res.data.id)
              newCloudTag.innerText = res.data.tagName
              cloudTagGroup.appendChild(newCloudTag)

              newCloudTag.addEventListener('click', cloudTagEvent, false)
            } else {
              utils.showMessage({
                title: '添加失败了，请重试',
                icon: 'failed'
              })
            }
          })
        }, false)

        // 更新文章
        btnUpdate && btnUpdate.addEventListener('click', e => {
          const id = utils.queryString(location.href).id
          formatData()
          utils.ajax('/api/manager/updateArticle', {
            method: 'POST',
            body: {
              id,
              article: formData
            }
          }).then(res => {
            if (res.errno === 0) {
              utils.showMessage({
                title: res.message,
                icon: 'success',
                cb() {
                  location.href = 'articles'
                }
              })
            } else {
              utils.showMessage({
                title: res.message,
                icon: 'failed'
              })
            }
          })
        }, false)


      }
    }, false)

  </script>

</body>

</html>
