<!DOCTYPE html>
<html lang="zh">

<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<link rel="stylesheet" href="./stylesheets/style.css">
    <link rel="stylesheet" href="./stylesheets/font-awesome.min.css">
	<title><%= title %></title>
</head>

<body>
    <div class="go-back" id="btn-go-back"><i class="fa fa-long-arrow-left" aria-hidden="true"></i></div>
	<section id="login" class="wrapper">
		<div class="container height-100vh dis-flex justify-content-center align-items-center">
			<div class="login-form item-radius-10 dis-flex flex-d-column">
                <div class="user-avatar dis-flex justify-content-center">
                    <img id="user-avatar" src="./images/default-avatar.jpg" alt="">
                </div>
    			<form action="/api/user/login" method="POST">
                    <div class="form-group">
                        <input type="text" id="userName" name="userName" autocomplete autofocus placeholder="USERNAME">
                        <i class="fa fa-exclamation-circle" aria-hidden="true"></i>
                    </div>
                    <div class="form-group">
                        <input type="text" id="password" name="password" placeholder="PASSWORD">
                        <i class="fa fa-exclamation-circle" aria-hidden="true"></i>
                    </div>
                    <div class="form-group">
                        <a href="javaScript: void(0);" class="btn btn-submit">登录</a>
                    </div>
    			</form>
            </div>
		</div>
	</section>
    <script src="./scripts/backgroundGradient.js"></script>
    <script src="./scripts/app.js" type="module"></script>
    <script type="module">
        import { utils } from './scripts/utils.js'
        document.addEventListener('readystatechange', e => {
            if (document.readyState === 'complete') {
                // 页面准备完毕

                // 用户登录相关逻辑
                const userNameEle = document.querySelector('#userName'),
                    passwordEle = document.querySelector('#password'),
                    userAvatar = document.querySelector('#user-avatar')
                let tempInputUserName
                passwordEle.addEventListener('focus', e => {
                    // 判断是否有该用户，如果有则请求头像，反之给出反馈
                    const userName = userNameEle.value

                    if (!userName) {
                        userNameEle.parentNode.classList.add('data-error')
                        userNameEle.placeholder = 'PlEASE ENTER USERNAME'
                        return
                    }
                    passwordEle.type = 'password'

                    if (!tempInputUserName && userAvatar.src.match(/default-avatar.jpg/)) {
                        // 临时用户没有值，需要请求一次用户是否存在
                        utils.ajax('/api/user/isExist', 'POST', {
                            userName
                        }).then(res => {
                            if (res.errno === 0) {
                                userAvatar.src = res.data.userAvatar
                                tempInputUserName = userName
                            } else {
                                userNameEle.parentNode.classList.add('data-error')
                                userNameEle.value = ''
                                userNameEle.placeholder = `没有 ${userName} 这个用户`
                            }
                        })
                    } else if (tempInputUserName && userName !== tempInputUserName) {
                        // 如果已经输入并且获取到了用户，但是又更改输入的用户名，则重新获取用户
                        utils.ajax('api/user/isExist', 'POST', {
                            userName
                        }).then(res => {
                            if (res.errno === 0) {
                                userAvatar.src = res.data.userAvatar
                                tempInputUserName = userName
                            } else {
                                userAvatar.src = './images/default-avatar.jpg'
                                tempInputUserName = ''
                            }
                        })
                    }
                }, false)

                userNameEle.addEventListener('input', e => {
                    if (userNameEle.parentNode.classList.contains('data-error')) {
                        userNameEle.parentNode.classList.remove('data-error')
                    }
                }, false)

                passwordEle.addEventListener('input', e => {
                    if (passwordEle.parentNode.classList.contains('data-error')) {
                        passwordEle.parentNode.classList.remove('data-error')
                    }
                }, false)

                document.addEventListener('keydown', doLogin, false)

                function doLogin() {
                    if (e.keyCode === 13) {
                        // 请求登录
                        const userName = userNameEle.value
                        const password = passwordEle.value
                        if (!userName) {
                            userNameEle.focus()
                            userNameEle.parentNode.classList.add('data-error')
                            return
                        }
                        if (!password) {
                            passwordEle.focus()
                            passwordEle.parentNode.classList.add('data-error')
                            return
                        }
                        utils.ajax('api/user/login', 'POST', {
                            userName,
                            password
                        }).then(res => {
                            if (res.errno === 0) {
                                utils.showMessage({
                                    title: '登录成功',
                                    icon: 'success'
                                })
                                let url = '/'
                                // 记录上一个页面的 url 登录成功则跳转回去
                                if (location.href.indexOf('url') > -1) {
                                    console.log('能进来')
                                    url = utils.queryString(location.href).url
                                }
                                setTimeout(() => {
                                    location.href = '/'
                                }, 2500)
                            } else {
                                // 密码错误
                                passwordEle.parentNode.classList.add('data-error')
                                passwordEle.value = ''
                                passwordEle.placeholder = '无效的密码'
                                passwordEle.focus()
                            }
                        })
                    }
                }
            }
        }, false)
    </script>
</body>

</html>
